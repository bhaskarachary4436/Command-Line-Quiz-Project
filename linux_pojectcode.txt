function quiz_begins()
{
  echo -e "1.Take the test\n2.Exit"
  read num
  case $num in
      1)
         i=5
         count=0
         while [ $i -le 50 ]
         do
            head -$i questions.txt|tail -5
            for j in `seq 10 -1 1`
            do
               echo -en "\rEnter your ans: $j "
               read -t 1 ans
               if [ -n "$ans" ]
               then
                    break
               else
                    ans=t
               fi
             done
            echo $ans>>user_ans.txt
            i=$((i+5))
            echo
          done

           user_answers=(`cut -d " " -f1 user_ans.txt`)
           actual_ans=(`cut -d " " -f1 answers.txt`)
           l=${#user_answers[@]}
           h=5
           echo "Results:"
           for k in `seq 0 $((l-1))`
           do
              echo
              head -$h questions.txt|tail -5
              echo
              if [ ${user_answers[$k]} = ${actual_ans[$k]} ]
              then
                  echo "Correct answer"
                  count=$((count+1))
               elif [ ${user_answers[$k]} = t ]
               then
                   echo "Timed Out answer"
                   echo "Correct answer is ${actual_ans[$k]}"
               else
                   echo "Wrong answer"
                   echo "Correct answer is ${actual_ans[$k]}"
              fi
              h=$((h+5))
           done
           echo "Your total score is $count/10"
           echo
           rm user_ans.txt
       ;;
      2)exit
        ;;
  esac
}
while [ 1 ]
do
  echo -e "1.signin\n2.signup\n3.exit"
  read num
  user_names=(`cat username.csv|cut -d " " -f1`)
  passwords=(`cat password.csv|cut -d " " -f1`)
  l=${#user_names[@]}
  case $num in
      1)
        while [ 1 ]
        do
        read -p "Enter the user name:" user
        flag=0
        for i in `seq 0 $((l-1))`
        do
           if [ "${user_names[$i]}" = "$user" ]
           then
                flag=1
                break
           fi
         done
         if [ $flag -eq 0 ]
         then
             echo "No such username"
             continue
         else
             read -p "Enter the password:" pass
             if [ "${passwords[$i]}" = "$pass" ]
             then
                  echo "Signin is successful"
                  quiz_begins
             else
                 echo "password doesn't match"
                 continue
             fi
         fi
         break
         done
        ;;
      2)
        while [ 1 ]
        do
        read -p "Enter the user name:" user
        flag=0
        for i in `seq 0 $((l-1))`
        do
           if [ "${user_names[$i]}" = "$user" ]
           then
                flag=1
                break
           fi
        done
        if [ $flag -eq 1 ]
        then
             echo "username already exists"
             continue
        else
              echo $user>>username.csv
              while [ 1 ]
              do
                 read -p "Enter the password:" pass
                 read -p "Confirm the password:" cpass
                 if [ $pass = $cpass ]
                 then
                     echo $pass>>password.csv
                     echo "Signup is successfull"
                     break
                  else
                     echo "Entered passwords doesn't match"
                  fi
              done
           fi
           break
           done
        ;;
      3)
        echo "exit block"
        exit
        ;;
   esac
done